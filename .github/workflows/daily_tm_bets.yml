name: Run Bet365 Bot

on:
  schedule:
    - cron: '0 8 * * *'   # 8:00 UTC
    - cron: '0 14 * * *'  # 14:00 UTC
    - cron: '0 20 * * *'  # 20:00 UTC
  workflow_dispatch:      # Permite execução manual

# Permissões necessárias para fazer push das alterações
permissions:
  contents: write

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 30   # Timeout de segurança

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Importante para fetch completo do histórico

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
        # Verificar instalação dos pacotes críticos
        echo "=== Pacotes instalados ==="
        pip list | grep -E "(colorama|pandas|telegram|aiohttp|requests|dotenv)"
        
        # Teste do import
        python -c "from dotenv import load_dotenv; print('✅ dotenv importado com sucesso')"

    # Criar arquivo .env temporário com as secrets
    - name: Create .env file
      run: |
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
        echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> .env
        if [ ! -z "${{ secrets.API_KEY }}" ]; then
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
        fi
        echo "=== Arquivo .env criado ==="

    - name: Run bot
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
        API_KEY: ${{ secrets.API_KEY }}
      run: |
        echo "=== Iniciando execução do bot ==="
        python run_full_bot.py

    - name: Commit and Push Database Changes
      if: always()  # Executa mesmo se o bot falhar
      run: |
        # Configurar git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Verificar se há mudanças
        echo "=== Verificando mudanças no banco de dados ==="
        git status
        
        # Adicionar todos os arquivos de dados (ajuste conforme necessário)
        git add *.db *.sqlite *.json data/ || echo "Nenhum arquivo para adicionar"
        
        # Verificar se há mudanças para commitar
        if git diff --staged --quiet; then
          echo "Não há mudanças para commitar"
        else
          # Fazer commit das mudanças
          git commit -m "Auto-update: $(date +'%Y-%m-%d %H:%M:%S')"
          
          # Fazer push das mudanças
          git push origin HEAD:main
          echo "✅ Mudanças commitadas e pushadas com sucesso"
        fi

    - name: Upload logs and database
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bot-data-${{ github.run_id }}
        path: |
          *.log
          *.db
          *.sqlite
          *.json
          data/
        retention-days: 7

    - name: Notify failure
      if: failure()
      run: |
        echo "❌ Execução falhou!"
        echo "Verificar logs e dados nos artifacts"