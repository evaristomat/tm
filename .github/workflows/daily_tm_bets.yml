name: Run Bet365 Bot

on:
  schedule:
    - cron: '0 8 * * *'   # 8:00 UTC
    - cron: '0 14 * * *'  # 14:00 UTC
    - cron: '0 20 * * *'  # 20:00 UTC
  workflow_dispatch:      # Permite execu√ß√£o manual

permissions:
  contents: write

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install colorama pandas python-telegram-bot aiohttp requests python-dotenv
        fi

    - name: Create .env file
      run: |
        cat > .env << EOF
        BOT_TOKEN=${{ secrets.BOT_TOKEN }}
        CHAT_ID=${{ secrets.CHAT_ID }}
        API_KEY=${{ secrets.API_KEY }}
        EOF
        echo "‚úÖ Arquivo .env criado"

    - name: Run bot
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
        API_KEY: ${{ secrets.API_KEY }}
      run: |
        echo "=== Iniciando execu√ß√£o do bot ==="
        python run_full_bot.py

    - name: Check for database changes
      if: always()
      id: check-changes
      run: |
        git status
        if git diff --name-only | grep -E '\.(db|sqlite|json)$' || git diff --name-only | grep 'data/'; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Mudan√ßas detectadas no banco de dados"
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "‚ùå Nenhuma mudan√ßa detectada no banco de dados"
        fi

    - name: Commit and push database changes
      if: always() && steps.check-changes.outputs.changes_detected == 'true'
      run: |
        git config --local user.email "github-actions@github.com"
        git config --local user.name "GitHub Actions"
        git add *.db *.sqlite *.json data/ 2>/dev/null || true
        
        if git diff --staged --quiet; then
          echo "‚ùå Nenhuma mudan√ßa para commitar"
          exit 0
        fi
        
        git commit -m "ü§ñ Auto-update database: $(date +'%Y-%m-%d %H:%M:%S')"
        git push origin HEAD:${{ github.ref_name }}
        echo "‚úÖ Banco de dados atualizado e push realizado"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bot-data-${{ github.run_id }}-${{ github.run_attempt }}
        path: |
          *.log
          *.db
          *.sqlite
          *.json
          data/
        retention-days: 3

    - name: Notify status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Execu√ß√£o bem-sucedida"
          echo "::notice::Bot executado com sucesso"
        else
          echo "‚ùå Falha na execu√ß√£o"
          echo "::error::Falha na execu√ß√£o do bot"
        fi